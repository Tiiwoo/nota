@top Top { TextBody }

TextBody { TextToken* }

TextToken { Text | Newline | Multinewline | Command }

Command { 
  CommandSigil 
  CommandName
  ArgCode*
  ArgText* 
}

CommandName { Ident | Number | lparen Js rparen }

CommandSigil { Pct | At | Hash }

ArgCode { 
  lbrkt (Ident (eq Js)? | Js) rbrkt
}

ArgText {  
  lbrc TextBody rbrc
| lverb VerbatimText rverb
}

@context dialectContext from "./tokens.ts"
@external tokens text from "./tokens.ts" { Text }
@external tokens verbatim from "./tokens.ts" { VerbatimText }

@tokens {  
  Pct { "%" }
  At { "@" }
  Hash { "#" }
  lverb { "|{ "}
  rverb { "}| "}
  lparen[@export] { "(" }
  rparen[@export] { ")" }
  lbrc[@export] { "{" }
  rbrc[@export] { "}" }
  lbrkt[@export] { "[" }
  rbrkt[@export] { "]" }
  eq[@export] { "=" }
  
  Multinewline { "\n" "\n"+ }
  Newline { "\n" }
  Ident { $[a-zA-Z_$]$[.a-zA-Z0-9_$]* }
  Number { $[0-9]+ }

  @precedence { Multinewline, Newline }
}

@external tokens js from "./tokens.ts" { Js }
